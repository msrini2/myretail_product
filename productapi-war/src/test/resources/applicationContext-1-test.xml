<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<import resource="classpath:spring/applicationContext-core.xml" />
	<import resource="classpath:spring/applicationContext-service.xml" />
	<import resource="classpath:spring/applicationContext-mq.xml" />
	<import resource="applicationContext-hibernate-test.xml" />
	<import resource="classpath:profiles/applicationContext-test.xml" />

	<context:component-scan base-package="com.myretail.product.util" />
	<context:component-scan base-package="com.myretail.product.ticlient" />
	<context:component-scan base-package="com.myretail.product.service" />
	<context:component-scan base-package="com.myretail.product.context" />
	<context:component-scan base-package="com.myretail.product.dao" />
	<context:component-scan base-package="com.myretail.product.manager" />
	<context:component-scan base-package="com.myretail.product.repo" />
	<context:component-scan base-package="com.myretail.product.quartz" />
	<context:component-scan base-package="com.myretail.product.cso" />
	<context:component-scan base-package="com.myretail.product.ecoupon" />
	<context:component-scan base-package="com.myretail.product.loyalityclient" />
	<context:component-scan base-package="com.myretail.product.mfgcoupon" />
	<context:component-scan base-package="com.myretail.product.filter" />
	<context:component-scan base-package="com.myretail.product.task" />
	<context:component-scan base-package="com.myretail.product.jmx" />
	<context:component-scan base-package="com.myretail.product.monitor" />
	<!-- AOP Config for Logging and Exception handling -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!--
	<context:load-time-weaver />
	-->

	<bean id="appConfig"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:application-default.properties</value>
				<value>classpath:application.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="applicationConfig" class="com.myretail.product.util.AppConfig"
		lazy-init="false">
		<constructor-arg index="0" ref="appConfig" />
	</bean>

	<bean id="bldConfig"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:build.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false" />
	</bean>

	<bean id="buildConfig" class="com.myretail.product.util.AppConfig"
		lazy-init="false">
		<constructor-arg index="0" ref="bldConfig" />
	</bean>

	<bean id="dynaConfig"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:dynamic-default.properties</value>
				<value>classpath:dynamic.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="dynamicConfig" class="com.myretail.product.util.AppConfig"
		lazy-init="false">
		<constructor-arg index="0" ref="dynaConfig" />
	</bean>

	<bean id="mcacheConfig"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:memcached-offer-default.properties</value>
				<value>classpath:memcached-offer.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="memcachedConfig" class="com.myretail.product.util.AppConfig"
		lazy-init="false">
		<constructor-arg index="0" ref="mcacheConfig" />
	</bean>

	<bean id="tiMetaMapperConfig"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:metadata-mapper.properties</value>
				<!-- <value>classpath:metadata-mapper.properties</value> -->
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="tiMetadataMapperConfig" class="com.myretail.product.util.AppConfig"
		lazy-init="false">
		<constructor-arg index="0" ref="tiMetaMapperConfig" />
	</bean>

	<bean id="clientMapperConfig"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:client-config.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="clientConfig" class="com.myretail.product.util.AppConfig"
		lazy-init="false">
		<constructor-arg index="0" ref="clientMapperConfig" />
	</bean>

	<!-- Configuring property file for batch -->
	<bean id="ecBatchConfig"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:ecoupon-batch-default.properties</value>
				<value>classpath:ecoupon-batch.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="eCouponBatchConfig" class="com.myretail.product.util.AppConfig"
		lazy-init="false">
		<constructor-arg index="0" ref="ecBatchConfig" />
	</bean>

	<!-- JMX MBeanServer: have to use factory method to locate server because 
		agentId for JBoss is not constant (serverName+timestamp) -->
	<bean id="mbeanServer" class="com.myretail.product.jmx.MBeanServerLocator"
		factory-method="locateJBoss" />

	<bean id="eCouponMcacheConfig"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:memcached-ecoupon-default.properties</value>
				<value>classpath:memcached-ecoupon.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="eCouponMemcachedConfig" class="com.myretail.product.util.AppConfig"
		lazy-init="false">
		<constructor-arg index="0" ref="eCouponMcacheConfig" />
	</bean>

</beans>
