# This file contains properties that can be changed at run-time
# Changing the property at run time will affect only the running JVM, if the JVM is re-started, the change is lost
# At start-up the property is set as defined in this file
# Each JVM needs to be updated individually

# access, monitor and request logs can be turned on/off. Note that this does not affect the log4j properties, only application conditions
## WARNING: logging.soapproxy should never be turned on by default. Use environment specific configs for that
logging.soapproxy = false
logging.logevent.soapproxy = false
cso.validation = true
cso.redemption = true
cso.redemption.new.service = true

soap.proxy.endpoint.url = http://hfdvunicarweb1.intra.searshc.com:9084/unica_api/services/StandardMultiAPIv10
# https://hfdvunicarweb1.intra.searshc.com:9447/unica_api/services/StandardMultiAPIv10
# http://hfdvunicarweb1.intra.searshc.com:9084/unica_api/services/StandardMultiAPIv10

#Param to add Number of dates for current date.
no.of.days.to.add.with.current.date = 14

#flags to enable offerSources
db.enabled=true
hd.enabled=true
hc.enabled=true
ti.enabled=true
yt.enabled=true
mfr.enabled=true
social.enabled=true
shcmfr.enabled=true
pikato.enabled=true

#flag to enable offerBus
offbus.enabled=true

# Store Pickup - enabling flag and delay to send second request in milliseconds
checkout.spu.enabled = true
checkout.spu.delay.millis = 100

# Order Confirmation - enabling flag
checkout.orderconfirmation.enabled = true

# Timeouts
timeout.millis.cso.connect = 500
timeout.millis.cso.socket = 500
timeout.millis.ti.connect = 1000
timeout.millis.ti.socket = 4000
timeout.millis.loyalty.connect = 1000
timeout.millis.loyalty.socket = 4000
timeout.millis.tec.connect = 1000
timeout.millis.tec.socket = 2000
timeout.millis.yt.connect = 1000
timeout.millis.yt.socket = 2000
timeout.millis.http.default.connect = 100
timeout.millis.http.default.socket = 2000
timeout.millis.pikato.connect = 500
timeout.millis.pikato.socket = 2000

#client config properties
# Deal Center config
## all ti.* configurations are only for Deal Center (Sears and Kmart) channels

#flags to enable offerSources
client.dc.sears.com.source.hc.enabled=true
client.dc.sears.com.source.ti.enabled=true
client.dc.sears.com.source.yt.enabled=false

client.dc.kmart.com.source.hc.enabled=true
client.dc.kmart.com.source.ti.enabled=true
client.dc.kmart.com.source.yt.enabled=true
client.dc.kmart.com.source.shcmfr.enabled=true

client.dc.i.sears.com.source.ti.enabled=true
client.dc.i.kmart.com.source.ti.enabled=true
client.dc.android.sears.com.source.ti.enabled=true
client.dc.android.kmart.com.source.ti.enabled=true
client.dc.m.sears.com.source.ti.enabled=true
client.dc.m.kmart.com.source.ti.enabled=true

client.shopin.m.syw.com.source.ti.enabled=true
client.shopin.m.kmart.com.source.ti.enabled=true
client.shopin.m.sears.com.source.ti.enabled=true
client.shopin.i.syw.com.source.ti.enabled=true
client.shopin.i.kmart.com.source.ti.enabled=true
client.shopin.i.sears.com.source.ti.enabled=true
client.shopin.android.kmart.com.source.ti.enabled=true
client.shopin.android.sears.com.source.ti.enabled=true
client.shopin.android.syw.com.source.ti.enabled=true

client.shopme.m.syw.com.source.ti.enabled=true
client.shopme.m.kmart.com.source.ti.enabled=true
client.shopme.m.sears.com.source.ti.enabled=true
client.shopme.i.kmart.com.source.ti.enabled=true
client.shopme.i.sears.com.source.ti.enabled=true
client.shopme.android.kmart.com.source.ti.enabled=true
client.shopme.android.sears.com.source.ti.enabled=true
client.shopme.android.syw.com.source.ti.enabled=true
client.shopme.i.syw.com.source.ti.enabled=true
client.shopme.sywkiosk.source.ti.enabled=true

client.storepages.syw.com.source.ti.enabled=true
client.picato.syw.com.source.ti.enabled=true

client.sywdc.syw.com.source.ti.enabled=true
client.sywdc.syw.com.source.hc.enabled=true
client.sywdc.i.syw.com.source.ti.enabled=true
client.sywdc.i.syw.com.source.hc.enabled=true
client.sywdc.android.syw.com.source.ti.enabled=true
client.sywdc.android.syw.com.source.hc.enabled=true
client.sywdc.sywkiosk.source.ti.enabled = true
client.kimk.syw.com.source.ti.enabled=true

client.la.sears.com.source.ti.enabled=true
client.la.kmart.com.source.ti.enabled=true

client.hp.sears.com.source.ti.enabled=true
client.hp.kmart.com.source.ti.enabled=true

client.po.sears.com.source.ti.enabled=true

client.pdp.sears.com.source.ti.enabled=true
client.pdp.kmart.com.source.ti.enabled=true

client.pers.ps.syw.com.source.ti.enabled=true
client.reg.ps.syw.com.source.ti.enabled=true

client.as.syw.com.source.ti.enabled=true
client.sywref.syw.com.source.ti.enabled=true
client.sywtrends.syw.com.source.ti.enabled=true
client.scp.syw.com.source.ti.enabled=true
client.couponstrip.syw.com.source.ti.enabled=true

client.checkout.sears.com.source.ti.enabled=true
client.checkout.kmart.com.source.ti.enabled=true
client.checkout.shopsears.source.ti.enabled=true
client.checkout.shopsearslite.source.ti.enabled=true
client.shrecap.sears.com.source.ti.enabled=true

#flags to enable offerBus source
client.sywdc.syw.com.source.ob.enabled=true
client.dc.sears.com.source.ob.enabled=true
client.dc.kmart.com.source.ob.enabled=true

#flags to enable social coupons
client.dc.sears.com.source.social.enabled=true
client.dc.kmart.com.source.social.enabled=true
client.dc.i.sears.com.source.social.enabled=true
client.dc.i.kmart.com.source.social.enabled=true
client.dc.m.sears.com.source.social.enabled=true
client.dc.m.kmart.com.source.social.enabled=true
client.dc.android.sears.com.source.social.enabled=true
client.dc.android.kmart.com.source.social.enabled=true

#list of clients handled by OfferServiceController.
mfr.clients = dc,sywdc,pdp

#list of clients supporting autoloading
autoload.clients = dc,sywdc

#list of tiTypes
list.dollar.threshold = 1,35
list.point.type = 7,8,30,37,38,41
list.dollar.type = 2,5,28,32,33

# Following flag is set "true" by default. When set, certain APIs look for request parameter named "tmpLimitAsCount"
# with value equivalent to "true" ("1" also works) in order to switch to using "limit" as max count.
# It this flag is not set, or set to "false", then "limit" will be treated as max count regardless of client or presence of tmpLimitAsCount
# Only two existing APIs need to process this flag: getOffers, getSavedOffers. All new APIs need not use this flag and always treat "limit"
# as max count
temp.limit.as.count.uses.tmpLimitAsCount = true
# Following flags define clients that must use this parameter, all other clients are expected to use "limit" correctly anyway
# Format of the key is: temp.limit.as.count.client.<channel_name>.<client_name>
# if the value of flag is "true" then client must use the tmpLimitAsCount to use field "limit" as max count
temp.limit.as.count.client.sears.com.dc = false
temp.limit.as.count.client.kmart.com.dc = true
temp.limit.as.count.client.syw.com.sywdc = true
temp.limit.as.count.client.i.syw.com.sywdc = false
temp.limit.as.count.client.i.syw.com.isywdc = false
temp.limit.as.count.client.m.syw.com.sywdc = false
temp.limit.as.count.client.android.syw.com.sywdc = false
# Logging ON/OFF for temp.limit.as.count
temp.limit.as.count.log.option.enabled = true

#flag for handling real time arbitration to form product to coupon relation
realtime.arbitration = true

# SHC timeout values
shc.pdp.socket.timeout.in.millis=200
shc.pdp.connect.timeout.in.millis=200

# Pricing timeout values
pricing.socket.timeout.in.millis=500
pricing.connect.timeout.in.millis=500

#Holiday cache expiration time
holiday.expiration.time=43200

#flag to enable cso validation for pdp
pdp.sears.com.csovalidation.required=false
pdp.kmart.com.csovalidation.required=false


cso.validation.cached = true


##enabling holiday offers
holidayoffers.enabled=false

##enabling GB FLOW
gbflow.enabled=true

##active rules enabled
active.rules.enabled=false

##for online arbitration logging
online.arbitration.log.enabled=true

#Referal Coupon Redemption Data 
referal.coupons=653822,654626,654628,654630,653863
#flag to be enabled to call mock service if telluride api is not ready
esb.mock.enabled = true
#URL for the Telluride getAlternatecoupon API
esb.endpoint.mock = http://localhost:8080/offersapi/r/tellurideApi/
#URL for the Telluride get applicable offers
esb.endpoint.telluride.mock=http://hofsorlab06d.sears.com:1196/isco/HttpListener
#flag enabled to call mock service if telluride api is not ready
esb.mock.telluride.enabled = true

esb.endpoint = http://esbqa-is.intra.searshc.com/SYWR_OBU/processMembershipServices

promo.analyzer.log.enabled=false


#Flag for mobile MFR arbitration
mobile.mfr.arbitration.flag = false

#Flag for mobile mixedCart arbitration
mobile.mixedcart.arbitration.flag = false

#Product Hits Threshold 
product.hits.threshold=50

#Flag for enabling searsOrderConfirmation Old Flow
searsocp.oldflow.enabled = false

#Flag for enabling shopin DB Enabled Flow : (Default Value : true)
#If set to false will skip fetching transaction from DB 
#and will directly call TI
shopin.dbflow.enabled = false

#Flag to enable fetching CSO from offer_cso table 
loademail.newflow.enabled = false

#flag for eliminating dummy offers
telluride.filter.offers = false

#flag for trimming telluride offer names
telluride.trim.offers = true

#Flag for turning Off coupon Auto load
offerbus.autoload.offers = true 
timeout.millis.http.offerbus.autoload.connect = 500
timeout.millis.http.offerbus.autoload.socket = 500

#master flag for enabling social coupons.
socialcoupons.sharable = true

# channel specific flags to DISABLE social coupons.
disable.syw.com.socialcoupons.sharable = false

#cache key prefix for dpm
dpm.cache.key.prefix=dpmPrefix

#for check if the channel is search or subcat
search.or.subcat=true

#cache key order for dpm
dpm.cache.key=productId,price,storeId,mapCompliance,versionId

#Telluride batch job thread pool Threshold 
dpm.thread.pool.threshold=50

#PDP flow enabling flag
pdp.flow.enabled=true

#mkt place items to be replaced
dpm.filter.mktplaceitems=ABC987654321P

#mkt place items to be replaced by this product id
dpm.filter.mktplaceitems.productid=000999999

#mkt place items replace flag
dpm.filter.mktplaceitems.enabled=true

#mkt place items enabling flag
dpm.mktplace.enabled=true

#mkt place items enabling flag
dpm.filter.mktplaceitems.excluded=ABC1212121212P

# flag enabling insertion to prod_hits table
pdp.prod.hits.enabled=false

#for vip offers
maxbenifits=10

#Parts-Direct default PID
dpm.pd.id=09810009000P

#Re-Arch Configs 
config.cache.expiration.period = 360
instance.db.config.grp = grp2

saved.offers.new.framework.on = false
saved.offers.new.framework.compare = false

#dpm message versions
dpm.gao.version=01
dpm.vip.version=04

#Skipping Offer De-duplication enable flag
exclude.deduplication.enabled = true\t
#Exclude offer de-duplication logic for clients(comma separated)
exclude.deduplication.clients = shrecap

# Below 2 flags are used only in the re-arch flow
# reuse.existing.transaction - Reuse the exisiting transaction from DB instead of creating a new transaction of same type is created for the same user.
# delete.existing.offerTransaction - Delete the old transaction if reuse.existing.transaction= false.
# WARNING -  delete.existing.offerTransactio flag should never be true if reuse.existing.transaction is set to true.
reuse.existing.transaction = false
delete.existing.offerTransaction=false

#Temporary Flags for max HC Count and AutoLoad
maxHCCount=500
maxTiAutoLoadCount=10
maxHolidayAutoLoadCount=5
holiday.autoload.enabled=false
update.transaction.sequence = false

#flag to implement changes on adding new column email_md5
sywr.md5.update.enabled = true
sywr.md5.lookup.enabled = true
email.md5.update.enabled = false

#Exclude cso validation logic for Ti Channel(comma separated)
exclude.cso.validation.tiChannel = personalshopper,shoppingrecap,searshomepage,kmarthomepage

#Exclude cso validation logic for Request Channel(comma separated)
exclude.cso.validation.requestChannel = shopsears,shopsearslite

#Exclude cso validation logic for clients(comma separated)
exclude.cso.validation.client = shopin,shrecap,message,hp,responsys,more2you,picato,checkout,po,tec,sweeps,wishlist

#Expiration time in seconds (30 mins)
ti.empty.transaction.expiration.time = 1800
cache.empty.ti.transaction = true


# VIP Benefit offers
fetch.vip.benefit.offers = true
load.vip.benefit.offers = true

#Offer metadata Telluride flow
vip.offer.metadata.flow.enabled = true
vip.metadata.update.check.enabled = true
vip.batch.fail.email.from = repo-syncReport@batchservice.com
vip.batch.fail.email.to = msrini2@searshc.com
vip.eligibility = N,S,K,M
vip.redemption = CSO

#Client-Channel specific flags to enable social coupons
dc.sears.com.socialcoupons.sharable=true
dc.m.sears.com.socialcoupons.sharable=true
dc.i.sears.com.socialcoupons.sharable=true
dc.android.sears.com.socialcoupons.sharable=true

dc.kmart.com.socialcoupons.sharable=true
dc.m.kmart.com.socialcoupons.sharable=true
dc.i.kmart.com.socialcoupons.sharable=true
dc.android.kmart.com.socialcoupons.sharable=true

#PDP Rearch Flow enabled
pdp.rearch.flow.enabled = true

promo.engine.upas.on = false
cart.response.new.on = true

pdp.client.value=pdp

pdp.invalid.product.pattern ={,}

load.offercode.cache.enabled = false

#enable targeted offers for PDP
pdp.ti.enabled=true

#Should be set to true inorder to save the holidayTransaction to database
persist.holiday.transaction = false

#Should be set to true in order to save the catelinaTransaction to database
persist.youtech.transaction = false;

#Should be set to true inorder to support clipping of coupons without offerUuid 
holiday.generateCSO.newflow = true

#This is to define record size to process/retry failed merge records
merge.fail.record.limit.size = 50

#DPM quick burn offers
quick.burn.key=QB 
qb.split.key=--

#Program type set for the DPM IFT client
program.type.ift=IFT

#Append below text to DPM quick burn offers
qb.offer.append.text =    

# For client=ift, DPM needs to pass below requestor id while calling telluride
dpm.ift.sears.requestor.id= SCOM
dpm.ift.kmart.requestor.id = KCOM

# For channel=syw.com, DPM needs to pass below order store id while calling telluride
syw.com.store.id= 09305



#PIKATO related flags
#save member transaction in DB
pikato.db.persist.enabled=true
# call pikato getOffersAPI for guest users
pikato.guest.offers = true
#call pikato getSavedOffersAPI for guest users
pikato.guest.saved.offers = true
# call pikato getOffersAPI for members users
pikato.member.offers = true
# call pikato getSavedOffersAPI for members users
pikato.member.saved.offers=true

#generate CSO from Pikato SERVICE
pikato.generate.cso = false
pikato.generate.guest.cso = false
pikato.generate.member.cso = false

#generate CSO from CSO ENGINE
pikato.internal.cso.generate = false
pikato.internal.member.cso.generate = false
pikato.internal.guest.cso.generate = false

#fetch active offer part flag
part.active.attr.fetch = true

#fetch rules for the count of promocodes passed
opc.codes.batch.size=50

#skip empty product offers ,go for arbitration again , no entry in db
skip.empty.product.coupons=true

#bulk insertion for loadSearsDeal batch job
bulk.insert=true
instore.deal.load.batch.size=2000

replicaDao.enabled = true

#for referenceUuid flow, skip sending offers expiring in below given days
skip.offers.expiring.in.days = 2

# This flag controls whether new unica client is used to invoke Unica APIs
unica.client.on = true

# This flag controls batch size for updating prod coupons rel
prod.coupons.batch.size = 20

# custom TI endpointkey-channel configuration
ti.custom.endpoint.channels=unicaPROD445-SEARSMORE2U,unicaPROD445-SRSPSRSPEML,unicaPROD445-KMTPSRSPEML

# Simplistic internal metadata cache management
metadata.cache.on = true
# minimal time in minutes when object will expire
metadata.cache.expire.minutes.min = 10
# range when object may expire, counted up from minimum minutes randomly
metadata.cache.expire.minutes.range = 10

# Temporary Flag for Holiday Coupon Issue of sending incorrect OfferUuid for GenerateCSO Request
holiday.newOfferUuid.enabled=true

log.metric.on = true

# Catalina flow enabled
catalina.enabled = true

#Show entire offer details for email flow
email.offer.details.enabled = true

#default clients for syw dc category count
category.count.source = HC,TI,MFR

#DPM clients
dpm.allowed.clients=ift,vip,pdp

#For Pikato guest user Failure,return HC coupons
pikato.guest.return.hc=false

#purge rule API limit
purge.rule.limit = 1000

#analytics flow for generate CSO enabled
generate.cso.analytics.enabled = true

#To remove CSO,generate CSO for TI offers
generate.cso.ti = false
ti.newOfferUuid.enabled = false

#Include staticActionUrl in response for clients(comma separated)
clients.requiring.static.action.url = responsys 

#skips returning points based coupon for online PDP
online.pdp.skip.points.coupon = true
#skips returning points based coupon for mobile PDP
mobile.pdp.skip.points.coupon = false
#skips expiring offers for pers client
skip.expiring.offers.client = ps
#include generate cso flow for below clients
generate.cso.enabled.client = dc,sywdc

#to handle offerType in response based on non cso offer indicator
non.cso.offer.indicator = genCso
non.cso.offer.value = Y

#validate non cso promotion with these characters
non.cso.eligibilty = C

#to call analytics api only if its true
analytics.api.flow.enable = true

#dpm cache expiration time set as 1 AM (for 2 PM set as 14)
dpm.cache.expiration.time = 1

#to bypass dpm offers saving in db
bypass.dpm.db.enabled = true
default.programType = false

#to handle increase in request progress time
cancel.high.request.time = false
flow.request.default.timeOut = 10000

#enabling dpm flow
dpm.flow.enabled=true

#enabling online promotion flow
online.promo.enabled = true
mfg.client.value=pdpmfg

#make TI call regardless of cso validation
skip.cso.validation.check = true

#to suppress TI control offers
ti.control.offer.metadata.key = offerControl
ti.control.offer.metadata.value = Y

# CSO validation in cache expires after this minutes
cso.validation.cache.expires.minutes = 10

#CSO generation in POST saved offers
generate.cso.in.post.saved.offers.enabled = true
